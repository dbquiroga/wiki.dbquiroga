"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6394],{5680:(e,n,a)=>{a.d(n,{xA:()=>u,yg:()=>y});var s=a(6540);function o(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function t(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);n&&(s=s.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,s)}return a}function r(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?t(Object(a),!0).forEach((function(n){o(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):t(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function i(e,n){if(null==e)return{};var a,s,o=function(e,n){if(null==e)return{};var a,s,o={},t=Object.keys(e);for(s=0;s<t.length;s++)a=t[s],n.indexOf(a)>=0||(o[a]=e[a]);return o}(e,n);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(s=0;s<t.length;s++)a=t[s],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=s.createContext({}),c=function(e){var n=s.useContext(l),a=n;return e&&(a="function"==typeof e?e(n):r(r({},n),e)),a},u=function(e){var n=c(e.components);return s.createElement(l.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return s.createElement(s.Fragment,{},n)}},m=s.forwardRef((function(e,n){var a=e.components,o=e.mdxType,t=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(a),m=o,y=d["".concat(l,".").concat(m)]||d[m]||p[m]||t;return a?s.createElement(y,r(r({ref:n},u),{},{components:a})):s.createElement(y,r({ref:n},u))}));function y(e,n){var a=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var t=a.length,r=new Array(t);r[0]=m;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[d]="string"==typeof e?e:o,r[1]=i;for(var c=2;c<t;c++)r[c]=a[c];return s.createElement.apply(null,r)}return s.createElement.apply(null,a)}m.displayName="MDXCreateElement"},1416:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>t,metadata:()=>i,toc:()=>c});var s=a(8168),o=(a(6540),a(5680));const t={sidebar_position:14,title:"Usando cy.session()"},r=void 0,i={unversionedId:"qa-automation/Cypress/cy_session",id:"qa-automation/Cypress/cy_session",title:"Usando cy.session()",description:"Con lo primero que me encontre al automatizar fueron las automatizaciones de los logins, la primer manera que aprendi a hacerlo es algo asi:",source:"@site/docs/qa-automation/Cypress/15.cy_session.mdx",sourceDirName:"qa-automation/Cypress",slug:"/qa-automation/Cypress/cy_session",permalink:"/wiki.dbquiroga/docs/qa-automation/Cypress/cy_session",draft:!1,editUrl:"https://github.com/dbquiroga/wiki.dbquiroga/edit/main/docs/qa-automation/Cypress/15.cy_session.mdx",tags:[],version:"current",sidebarPosition:14,frontMatter:{sidebar_position:14,title:"Usando cy.session()"},sidebar:"tutorialSidebar",previous:{title:"API Testing con Cypress",permalink:"/wiki.dbquiroga/docs/qa-automation/Cypress/api"},next:{title:"Testear codigos de verificacion de email con mailosaur",permalink:"/wiki.dbquiroga/docs/qa-automation/Cypress/email_mailosaur"}},l={},c=[{value:"login dentro del POM",id:"login-dentro-del-pom",level:2},{value:"Usando beforeEach",id:"usando-beforeeach",level:2},{value:"Custom commands",id:"custom-commands",level:2},{value:"Mejorando el rendimiento",id:"mejorando-el-rendimiento",level:2},{value:"Usando cy.session()",id:"usando-cysession",level:2},{value:"La forma en que funciona es algo como esto:",id:"la-forma-en-que-funciona-es-algo-como-esto",level:4},{value:"Ejemplos:",id:"ejemplos",level:2}],u={toc:c},d="wrapper";function p(e){let{components:n,...a}=e;return(0,o.yg)(d,(0,s.A)({},u,a,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"Con lo primero que me encontre al automatizar fueron las automatizaciones de los logins, la primer manera que aprendi a hacerlo es algo asi:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-jsx",metastring:'title="https://www.saucedemo.com/"',title:'"https://www.saucedemo.com/"'},'   cy.visit("/");\n    cy.get("#user-name").type(\'standard_user\');\n    cy.get("#password").type(\'secret_sauce\');\n    cy.get("#login-button").click();\n')),(0,o.yg)("p",null,"De esta manera Cypress intenta borrar los datos del navegador entre pruebas, lo que lleva a la necesidad de iniciar sesi\xf3n antes de cada descanso. Podemos hacer esto usando el hook beforeEach() o usando la API de cookies para ignorar la eliminaci\xf3n de ciertas cookies de nuestra aplicaci\xf3n."),(0,o.yg)("h2",{id:"login-dentro-del-pom"},"login dentro del POM"),(0,o.yg)("p",null,"Despues de esto el proximo paso fue llevarlo a un POM para abstraerlo un poco mas. Lo cual se veia algo asi:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-jsx"},"export class Login {\n    constructor() {\n        this.user = '#user-name';\n        this.pass = '#password';\n        this.submitButton = '[type= \"submit\"]';\n    }\n\n    login(username, password) {\n        cy.url().should('contain', 'saucedemo');\n        cy.get(this.user).type(username);\n        cy.get(this.pass).type(password);\n        cy.get(this.submitButton).click();\n    }\n}\n")),(0,o.yg)("h2",{id:"usando-beforeeach"},"Usando beforeEach"),(0,o.yg)("p",null,"De esta manera y usando un beforeEach lo pude ejecutar al login antes de cualquier escenario. "),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-jsx"},"import { Login } from '@pages/login.page';\n\nbeforeEach(() => {\n    loginPage.login('standard_user', 'secret_sauce');\n})\n")),(0,o.yg)("h2",{id:"custom-commands"},"Custom commands"),(0,o.yg)("p",null,"Hasta ahi fue todo perfecto, hasta que encontre que muchos lo usaban en custom commands para funciones que son mas globales, como justamente lo es el login. Con los custom commands se vuelven parte de nuestra libreria de cypress. "),(0,o.yg)("p",null,"Lo cual se veria algo asi:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-jsx",metastring:'title="cypress/support/commands.js"',title:'"cypress/support/commands.js"'},'Cypress.Commands.add("login", (username, password) => {\n    cy.visit("/");\n    cy.get("#user-name").type(username);\n    cy.get("#password").type(password);\n    cy.get("#login-button").click();\n});\n')),(0,o.yg)("p",null,"Entonces lo usaba en el test de esta manera:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-jsx",metastring:'title="cypress/e2e/login.cy.js"',title:'"cypress/e2e/login.cy.js"'}," beforeEach(() => {\n    cy.login('standard_user', 'secret_sauce');\n  });\n")),(0,o.yg)("h2",{id:"mejorando-el-rendimiento"},"Mejorando el rendimiento"),(0,o.yg)("p",null,"Entendi que con eso estaba bastante bien, pero habia otras maneras de mejorar el rendimiento. Esta opcion era usando cy.session(), lo cual hay que ser mas consciente de que es realmente lo que sucede en la app que se esta probando. "),(0,o.yg)("p",null,"Siempre vamos a tener 3 partes presentes:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"servidor"),(0,o.yg)("li",{parentName:"ul"},"Interfaz"),(0,o.yg)("li",{parentName:"ul"},"Navegador")),(0,o.yg)("p",null,"Al iniciar sesi\xf3n, el servidor proporciona datos (generalmente en forma de token), y luego la interfaz los guarda en el navegador (generalmente en forma de cookies). "),(0,o.yg)("p",null,"En otras palabras, volver a crear ese inicio de sesi\xf3n en la prueba es bastante r\xe1pido una vez que se descubre, pero no es f\xe1cil. Especialmente si es necesario lidiar con el inicio de sesi\xf3n de terceros, los flujos de OAuth y otros m\xe9todos de inicio de sesi\xf3n m\xe1s avanzados. Hay muchas gu\xedas \xfatiles en los documentos de Cypress para esto."),(0,o.yg)("p",null,"En el caso de trabajar con una demo, solo guarda las cokies de la sesion."),(0,o.yg)("h2",{id:"usando-cysession"},"Usando cy.session()"),(0,o.yg)("p",null,"cy.session() usa la UI solo una vez para toda la suite (todo lo que este en el describe)."),(0,o.yg)("p",null,"Entonces teniendo en cuenta el custom commands de mas arriba se haria esta modificacion:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-jsx",metastring:'title="cypress/support/commands.js"',title:'"cypress/support/commands.js"'},'Cypress.Commands.add("login", (username, password) => {\n  cy.session("login", () => {\n    cy.visit("/");\n    cy.get("#user-name").type(username);\n    cy.get("#password").type(password);\n    cy.get("#login-button").click();\n  });\n});\n')),(0,o.yg)("p",null,"Otra forma de usarlo sin cambiar los commands"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-jsx",metastring:'title="cypress/e2e/login.cy.js"',title:'"cypress/e2e/login.cy.js"'},"it('logs in the user', () => {\n\n  cy.session('loginWithSession', () => {\n    cy.login('standard_user', 'secret_sauce')\n  })\n\n  cy.visit('/')\n})\n\n")),(0,o.yg)("p",null,"De esta manera deberia recordar la sesion, entonces al correrse mas de una vez la sesion sera restaurada y no creada nuevamente. "),(0,o.yg)("p",null,"esta ejecuci\xf3n restaurar\xe1 la sesi\xf3n, mientras que la primera ejecucion la crear\xe1. Tambi\xe9n se puede notar c\xf3mo al usar cy.session() toma solo un fragmento del tiempo en comparaci\xf3n sin usarlo. "),(0,o.yg)("h4",{id:"la-forma-en-que-funciona-es-algo-como-esto"},"La forma en que funciona es algo como esto:"),(0,o.yg)("p",null,"Cypress ejecuta una prueba\ncuando tropieza con cy.session() tomar\xe1 una decisi\xf3n."),(0,o.yg)("p",null,"La sesi\xf3n con el nombre loginWithSession no existe, ejecutar\xe9 el c\xf3digo dentro de la devoluci\xf3n de llamada cy.session()."),(0,o.yg)("p",null,"Existe una sesi\xf3n con el nombre loginWithSession, restaurar\xe9 la sesi\xf3n."),(0,o.yg)("p",null,"Lo que esencialmente significa restaurar una sesi\xf3n es recuperar todas las cookies del navegador, el almacenamiento local y el almacenamiento de la sesi\xf3n que estaba presente en el navegador despu\xe9s de que el usuario inici\xf3 sesi\xf3n."),(0,o.yg)("p",null,"Bueno, cy.session() se encarga de la parte del navegador, lo que significa que no tienes que preocuparte por la parte de la interfaz y el servidor."),(0,o.yg)("h2",{id:"ejemplos"},"Ejemplos:"),(0,o.yg)("p",null,"cy.session() "),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-jsx"},'describe("Test del login", () => {\n  beforeEach(() => {\n    const user = "standard_user";\n    const pass = "secret_sauce";\n\n    cy.login(user, pass);\n  });\n  it("Visitar otros endpoints", () => {\n    cy.visit("https://www.saucedemo.com/cart.html", {\n      failOnStatusCode: false,\n    });\n  });\n\n  it("Visitar otros endpoints", () => {\n    cy.visit("https://www.saucedemo.com/checkout-step-one.html", {\n      failOnStatusCode: false,\n    });\n  });\n});\n')),(0,o.yg)("p",null,"sin cy.session()"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-jsx"},'describe("Test del login", () => {\n  beforeEach(() => {\n    cy.visit("/");\n    cy.get("#user-name").type(`standard_user`);\n    cy.get("#password").type(`secret_sauce`);\n    cy.get("#login-button").click();\n  });\n\n  it("Visitar otros endpoints", () => {\n    cy.visit("https://www.saucedemo.com/cart.html", {\n      failOnStatusCode: false,\n    });\n  });\n\n  it("Visitar otros endpoints", () => {\n    cy.visit("https://www.saucedemo.com/checkout-step-one.html", {\n      failOnStatusCode: false,\n    });\n  });\n});\n')))}p.isMDXComponent=!0}}]);