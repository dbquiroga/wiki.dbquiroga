"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[567],{5680:(e,a,r)=>{r.d(a,{xA:()=>p,yg:()=>g});var n=r(6540);function o(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function t(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?t(Object(r),!0).forEach((function(a){o(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):t(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function i(e,a){if(null==e)return{};var r,n,o=function(e,a){if(null==e)return{};var r,n,o={},t=Object.keys(e);for(n=0;n<t.length;n++)r=t[n],a.indexOf(r)>=0||(o[r]=e[r]);return o}(e,a);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(n=0;n<t.length;n++)r=t[n],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),d=function(e){var a=n.useContext(s),r=a;return e&&(r="function"==typeof e?e(a):l(l({},a),e)),r},p=function(e){var a=d(e.components);return n.createElement(s.Provider,{value:a},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var r=e.components,o=e.mdxType,t=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=d(r),u=o,g=m["".concat(s,".").concat(u)]||m[u]||c[u]||t;return r?n.createElement(g,l(l({ref:a},p),{},{components:r})):n.createElement(g,l({ref:a},p))}));function g(e,a){var r=arguments,o=a&&a.mdxType;if("string"==typeof e||o){var t=r.length,l=new Array(t);l[0]=u;var i={};for(var s in a)hasOwnProperty.call(a,s)&&(i[s]=a[s]);i.originalType=e,i[m]="string"==typeof e?e:o,l[1]=i;for(var d=2;d<t;d++)l[d]=r[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},6768:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>t,metadata:()=>i,toc:()=>d});var n=r(8168),o=(r(6540),r(5680));const t={sidebar_position:4,title:"Arrays/ Arreglos"},l=void 0,i={unversionedId:"javascript/arrays",id:"javascript/arrays",title:"Arrays/ Arreglos",description:"Los arreglos o arrays son lo que se conoce como objeto global dentro de Javascript, y que nos permiten guardar y gestionar informaci\xf3n. Esto nos ser\xe1 de gran utilidad cuando queramos almacenar datos.",source:"@site/docs/javascript/arrays.md",sourceDirName:"javascript",slug:"/javascript/arrays",permalink:"/wiki.dbquiroga/docs/javascript/arrays",draft:!1,editUrl:"https://github.com/dbquiroga/wiki.dbquiroga/edit/main/docs/javascript/arrays.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Arrays/ Arreglos"},sidebar:"tutorialSidebar",previous:{title:"Callbacks",permalink:"/wiki.dbquiroga/docs/javascript/callbacks"},next:{title:"Herencias",permalink:"/wiki.dbquiroga/docs/javascript/herencias"}},s={},d=[{value:"Metodos",id:"metodos",level:3},{value:"Length",id:"length",level:4},{value:"M\xe9todos de inserci\xf3n",id:"m\xe9todos-de-inserci\xf3n",level:4},{value:"M\xe9todos varios",id:"m\xe9todos-varios",level:4},{value:"M\xe9todos de recorrido",id:"m\xe9todos-de-recorrido",level:4}],p={toc:d},m="wrapper";function c(e){let{components:a,...r}=e;return(0,o.yg)(m,(0,n.A)({},p,r,{components:a,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"Los arreglos o arrays son lo que se conoce como objeto global dentro de Javascript, y que nos permiten guardar y gestionar informaci\xf3n. Esto nos ser\xe1 de gran utilidad cuando queramos almacenar datos. "),(0,o.yg)("p",null,"Dentro de los arreglos existen dos conceptos que pueden parecer similares, pero son muy diferentes."),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"Por un lado tenemos lo que se conoce como ",(0,o.yg)("strong",{parentName:"p"}," elemento "),". Los elementos son aquellos datos que hayamos guardado. ")),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"Por otro lado, est\xe1 el concepto de ",(0,o.yg)("strong",{parentName:"p"}," \xedndice "),". Los \xedndices no representan al dato en s\xed mismo, sino la posici\xf3n en la que se est\xe1 guardando. Un detalle muy importante que hay que destacar es que, en los arreglos, siempre se comienza a contabilizar las posiciones desde el n\xfamero cero, no el uno."))),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"// Lista de compras\nlistaDeCompras[3] = 'Tomates';\nlistaDeCompras[1] = 'Lechuga';\n\n// Ver lista de compras\nvar elementoDelArray = listaDeCompras[1];\nconsole.log(elementoDelArray);\n")),(0,o.yg)("h3",{id:"metodos"},"Metodos"),(0,o.yg)("p",null,"Los arreglos tienen asociados una serie de metodos. Los metodos son funciones nativas/preestablecidas en los lenguajes de programaci\xf3n.Length es un metodo. "),(0,o.yg)("h4",{id:"length"},"Length"),(0,o.yg)("p",null,"Devuelve el n\xfamero de elementos que hay en la matriz o la longitud de la cadena de caracteres."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"// Lenght\nvar nombres = ['Matias', 'Maria', 'Diego', 'Rosa'].length;\nconsole.log(nombres);\n")),(0,o.yg)("h4",{id:"m\xe9todos-de-inserci\xf3n"},"M\xe9todos de inserci\xf3n"),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"El m\xe9todo ",(0,o.yg)("inlineCode",{parentName:"p"},"push()")," a\xf1ade uno o m\xe1s elementos al final de un arreglo, y devuelve la nueva longitud del array.")),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"El m\xe9todo ",(0,o.yg)("inlineCode",{parentName:"p"},"pop()")," elimina y devuelve el \xfaltimo elemento de un arreglo.")),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"El m\xe9todo ",(0,o.yg)("inlineCode",{parentName:"p"},"unshift()")," agrega uno o m\xe1s elementos al inicio de un arreglo, y devuelve la nueva longitud del array.")),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"El m\xe9todo ",(0,o.yg)("inlineCode",{parentName:"p"},"shift()")," elimina y devuelve el primer elemento de un arreglo."))),(0,o.yg)("h4",{id:"m\xe9todos-varios"},"M\xe9todos varios"),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"El m\xe9todo ",(0,o.yg)("inlineCode",{parentName:"p"},"includes()")," determina si un arreglo incluye o contiene un elemento espec\xedfico. Devuelve true o false en cada caso.")),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"El m\xe9todo ",(0,o.yg)("inlineCode",{parentName:"p"},"every()")," determina si todos los elementos en un arreglo satisfacen una misma condici\xf3n.")),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"El m\xe9todo ",(0,o.yg)("inlineCode",{parentName:"p"},"split()")," convierte un string en un arreglo, donde cada elemento contendr\xe1 un sub-string, dependiendo del par\xe1metro divisor que indiquemos.")),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"El m\xe9todo ",(0,o.yg)("inlineCode",{parentName:"p"},"join()")," convierte un arreglo en un string, uniendo todos los elementos de este en una misma cadena."))),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"// JOIN\nvar palabraArreglada = palabraSeparada.join('');\n\nconsole.log(palabraArreglada);\n")),(0,o.yg)("h4",{id:"m\xe9todos-de-recorrido"},"M\xe9todos de recorrido"),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"El m\xe9todo ",(0,o.yg)("inlineCode",{parentName:"p"},"forEach()")," nos permite recorrer un arreglo, realizando alguna acci\xf3n en para cada elemento.")),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"El m\xe9todo ",(0,o.yg)("inlineCode",{parentName:"p"},"map()")," tambi\xe9n nos permite recorrer un arreglo y realizar una acci\xf3n por cada elemento. La diferencia es que este m\xe9todo devuelve un nuevo arreglo los elementos modificados."))),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"// MAP\nvar numeros = [ 1, 2, 3, 4 ];\nvar masUno = numeros.map( (num) => { return num + 1 } );\n\nconsole.log(masUno);\n")))}c.isMDXComponent=!0}}]);