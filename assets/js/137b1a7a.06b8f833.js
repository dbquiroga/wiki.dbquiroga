"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[822],{5680:(e,a,r)=>{r.d(a,{xA:()=>p,yg:()=>g});var t=r(6540);function n(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function o(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?o(Object(r),!0).forEach((function(a){n(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function l(e,a){if(null==e)return{};var r,t,n=function(e,a){if(null==e)return{};var r,t,n={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],a.indexOf(r)>=0||(n[r]=e[r]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var m=t.createContext({}),s=function(e){var a=t.useContext(m),r=a;return e&&(r="function"==typeof e?e(a):i(i({},a),e)),r},p=function(e){var a=s(e.components);return t.createElement(m.Provider,{value:a},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},c=t.forwardRef((function(e,a){var r=e.components,n=e.mdxType,o=e.originalType,m=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(r),c=n,g=d["".concat(m,".").concat(c)]||d[c]||u[c]||o;return r?t.createElement(g,i(i({ref:a},p),{},{components:r})):t.createElement(g,i({ref:a},p))}));function g(e,a){var r=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=c;var l={};for(var m in a)hasOwnProperty.call(a,m)&&(l[m]=a[m]);l.originalType=e,l[d]="string"==typeof e?e:n,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}c.displayName="MDXCreateElement"},3655:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>m,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var t=r(8168),n=(r(6540),r(5680));const o={sidebar_position:0,title:"Comandos Git"},i=void 0,l={unversionedId:"git/git_basico",id:"git/git_basico",title:"Comandos Git",description:"Para crear una nueva rama:",source:"@site/docs/git/git_basico.md",sourceDirName:"git",slug:"/git/git_basico",permalink:"/wiki.dbquiroga/docs/git/git_basico",draft:!1,editUrl:"https://github.com/dbquiroga/wiki.dbquiroga/edit/main/docs/git/git_basico.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0,title:"Comandos Git"},sidebar:"tutorialSidebar",previous:{title:"DApp",permalink:"/wiki.dbquiroga/docs/blockchain/dapp"},next:{title:"Como subir un proyecto Git con SSH",permalink:"/wiki.dbquiroga/docs/git/proyecto_ssh"}},m={},s=[{value:"Para crear una nueva rama:",id:"para-crear-una-nueva-rama",level:2},{value:"Para movernos a esa rama:",id:"para-movernos-a-esa-rama",level:2},{value:"Para crear y moverme a esa nueva rama",id:"para-crear-y-moverme-a-esa-nueva-rama",level:2},{value:"Nomenclatura para nombrar una rama",id:"nomenclatura-para-nombrar-una-rama",level:2},{value:"Para listar las ramas existentes tanto local como remoto",id:"para-listar-las-ramas-existentes-tanto-local-como-remoto",level:2},{value:"Stash.",id:"stash",level:2},{value:"para mergear de una rama a otra. abrir la rama donde quiero que se mergee otra",id:"para-mergear-de-una-rama-a-otra-abrir-la-rama-donde-quiero-que-se-mergee-otra",level:2},{value:"Para mergear commits entre ramas",id:"para-mergear-commits-entre-ramas",level:2},{value:"Para tener la rama up to date (para que se pare en el ultimo commit de la rama)",id:"para-tener-la-rama-up-to-date-para-que-se-pare-en-el-ultimo-commit-de-la-rama",level:2},{value:"Para actualizar mi rama a otra rama",id:"para-actualizar-mi-rama-a-otra-rama",level:2},{value:"Borrar todo y empezar de cero",id:"borrar-todo-y-empezar-de-cero",level:2},{value:"Ver los commits",id:"ver-los-commits",level:2},{value:"ver los commits, en los logs, en una linea",id:"ver-los-commits-en-los-logs-en-una-linea",level:2}],p={toc:s},d="wrapper";function u(e){let{components:a,...r}=e;return(0,n.yg)(d,(0,t.A)({},p,r,{components:a,mdxType:"MDXLayout"}),(0,n.yg)("h2",{id:"para-crear-una-nueva-rama"},"Para crear una nueva rama:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre"},"git branch <nombre_nueva_rama>\n")),(0,n.yg)("admonition",{type:"note"},(0,n.yg)("p",{parentName:"admonition"},"Esta nueva rama se creara en base a donde estemos parados.")),(0,n.yg)("h2",{id:"para-movernos-a-esa-rama"},"Para movernos a esa rama:"),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"`git checkout")," <nombre_nueva_rama>`"),(0,n.yg)("h2",{id:"para-crear-y-moverme-a-esa-nueva-rama"},"Para crear y moverme a esa nueva rama"),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"`git checkout -b")," <nombre_nueva_rama>`"),(0,n.yg)("h2",{id:"nomenclatura-para-nombrar-una-rama"},"Nomenclatura para nombrar una rama"),(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"git checkout -b <tipo>/<numero historia>-descripcion-corta-de-la-rama")),(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"tipos: feature, bugfix, fix, hotfix, chore\n sintaxis numero historia: tt--")),(0,n.yg)("h2",{id:"para-listar-las-ramas-existentes-tanto-local-como-remoto"},"Para listar las ramas existentes tanto local como remoto"),(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"git branch -a")),(0,n.yg)("h2",{id:"stash"},"Stash."),(0,n.yg)("p",null,"Entiendo que es como dejar guardado nuestro trabajo en una carpeta. Con este comando guardamos en una carpeta temporal los cambios que hayamos realizado"),(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"git stash")),(0,n.yg)("p",null,"Puedes volver a aplicar los cambios de un stash mediante el comando. Al hacer\xa0",(0,n.yg)("em",{parentName:"p"},"pop")," del stash, se eliminan los cambios de este y se vuelven a aplicar en el c\xf3digo en el que est\xe1s trabajando"),(0,n.yg)("p",null,"\xa0",(0,n.yg)("inlineCode",{parentName:"p"},"git stash pop")),(0,n.yg)("p",null,"Otra opci\xf3n es volver a aplicar los cambios en el c\xf3digo en el que est\xe1s trabajando\xa0",(0,n.yg)("em",{parentName:"p"},"y")," conservarlos en tu stash mediante el comando. Esto resulta \xfatil si quieres aplicar los mismos cambios de un stash en varias ramas."),(0,n.yg)("p",null,"\xa0",(0,n.yg)("inlineCode",{parentName:"p"},"git stash apply")),(0,n.yg)("h2",{id:"para-mergear-de-una-rama-a-otra-abrir-la-rama-donde-quiero-que-se-mergee-otra"},"para mergear de una rama a otra. abrir la rama donde quiero que se mergee otra"),(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"git merge %nombre rama que quiero mergear a mi rama actual%")),(0,n.yg)("h2",{id:"para-mergear-commits-entre-ramas"},"Para mergear commits entre ramas"),(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"git cherry-pick hash-del-commit")),(0,n.yg)("h2",{id:"para-tener-la-rama-up-to-date-para-que-se-pare-en-el-ultimo-commit-de-la-rama"},"Para tener la rama up to date (para que se pare en el ultimo commit de la rama)"),(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"git rebase\n****")),(0,n.yg)("h2",{id:"para-actualizar-mi-rama-a-otra-rama"},"Para actualizar mi rama a otra rama"),(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"git pull origin <nombre_rama>")," "),(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"ej: git pull origin develop")),(0,n.yg)("h2",{id:"borrar-todo-y-empezar-de-cero"},"Borrar todo y empezar de cero"),(0,n.yg)("p",null,"git restore --staged .\ngit restore .\ngit checkout develop\ngit pull"),(0,n.yg)("h2",{id:"ver-los-commits"},"Ver los commits"),(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"git log")),(0,n.yg)("h2",{id:"ver-los-commits-en-los-logs-en-una-linea"},"ver los commits, en los logs, en una linea"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre"},"git log --oneline\n")),(0,n.yg)("p",null,"Ejemplo:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre"},"log --oneline\ne56ba1f (HEAD -> master) Revert \"Just a regular update, definitely no accidents here...\"\n52418f7 Just a regular update, definitely no accidents here...\n9a9add8 (origin/master) Added .gitignore\n81912ba Corrected spelling error\n3fdaa5b Merge pull request #1 from w3schools-test/update-readme\n836e5bf (origin/update-readme, update-readme) Updated readme for GitHub Branches\ndaf4f7c (origin/html-skeleton, html-skeleton) Updated index.html with basic meta\nfacaeae (gh-page/master) Merge branch 'master' of https://github.com/w3schools-test/hello-world\ne7de78f Updated index.html. Resized image\n5a04b6f Updated README.md with a line about focus\nd29d69f Updated README.md with a line about GitHub\ne0b6038 merged with hello-world-images after fixing conflicts\n1f1584e added new image\ndfa79db updated index.html with emergency fix\n0312c55 Added image to Hello World\n09f4acd Updated index.html with a new line\n221ec6e First release of Hello World!\n")))}u.isMDXComponent=!0}}]);