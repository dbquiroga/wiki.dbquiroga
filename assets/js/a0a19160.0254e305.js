"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3418],{5680:(e,a,n)=>{n.d(a,{xA:()=>u,yg:()=>g});var r=n(6540);function t(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function i(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?i(Object(n),!0).forEach((function(a){t(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function s(e,a){if(null==e)return{};var n,r,t=function(e,a){if(null==e)return{};var n,r,t={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],a.indexOf(n)>=0||(t[n]=e[n]);return t}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var c=r.createContext({}),l=function(e){var a=r.useContext(c),n=a;return e&&(n="function"==typeof e?e(a):o(o({},a),e)),n},u=function(e){var a=l(e.components);return r.createElement(c.Provider,{value:a},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},m=r.forwardRef((function(e,a){var n=e.components,t=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=t,g=d["".concat(c,".").concat(m)]||d[m]||p[m]||i;return n?r.createElement(g,o(o({ref:a},u),{},{components:n})):r.createElement(g,o({ref:a},u))}));function g(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var c in a)hasOwnProperty.call(a,c)&&(s[c]=a[c]);s.originalType=e,s[d]="string"==typeof e?e:t,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9757:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=n(8168),t=(n(6540),n(5680));const i={sidebar_position:1,title:"Estructuras Repetitiva ( do, do while, for)"},o=void 0,s={unversionedId:"java/estructuras_repetitivas",id:"java/estructuras_repetitivas",title:"Estructuras Repetitiva ( do, do while, for)",description:"Que son las estructuras repetitivas?",source:"@site/docs/java/estructuras_repetitivas.md",sourceDirName:"java",slug:"/java/estructuras_repetitivas",permalink:"/wiki.dbquiroga/docs/java/estructuras_repetitivas",draft:!1,editUrl:"https://github.com/dbquiroga/wiki.dbquiroga/edit/main/docs/java/estructuras_repetitivas.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Estructuras Repetitiva ( do, do while, for)"},sidebar:"tutorialSidebar",previous:{title:"Tipod de Datos Primitivos",permalink:"/wiki.dbquiroga/docs/java/datos_primitivos"},next:{title:"Modificadores de accesos",permalink:"/wiki.dbquiroga/docs/java/modificadores_de_accesos"}},c={},l=[{value:"Que son las estructuras repetitivas?",id:"que-son-las-estructuras-repetitivas",level:2},{value:"Cadena de caracteres. Clase String.",id:"cadena-de-caracteres-clase-string",level:3},{value:"While",id:"while",level:3},{value:"Do while",id:"do-while",level:3},{value:"For",id:"for",level:3}],u={toc:l},d="wrapper";function p(e){let{components:a,...i}=e;return(0,t.yg)(d,(0,r.A)({},u,i,{components:a,mdxType:"MDXLayout"}),(0,t.yg)("h2",{id:"que-son-las-estructuras-repetitivas"},"Que son las estructuras repetitivas?"),(0,t.yg)("h3",{id:"cadena-de-caracteres-clase-string"},"Cadena de caracteres. Clase String."),(0,t.yg)("p",null,"Es un objeto en java que nos permite trabajar con cadena de caracteres, palabras, oraciones. La clase string tiene herramientas que nos ayudan a hacer las cosas mas sencillas. Por ejemplo: encontrar cuantos caracteres tiene un string.Cuando se define una variable String, se crea una instancia de la clase String."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-java",metastring:"Declaracion y asignacion de una cadena de caracteres",Declaracion:!0,y:!0,asignacion:!0,de:!0,una:!0,cadena:!0,caracteres:!0},'String nombre = "Day";\n')),(0,t.yg)("admonition",{title:"Strings",type:"info"},(0,t.yg)("p",{parentName:"admonition"},'Los String siempre van con comillas dobles "')),(0,t.yg)("admonition",{type:"info"},(0,t.yg)("p",{parentName:"admonition"},"En Java no se puede utilizar el operador relacionar == para verificar si dos String son iguales.")),(0,t.yg)("admonition",{type:"info"},(0,t.yg)("p",{parentName:"admonition"},"Los objetos como String se almacenan en el heap de memoria. Cuando asignas una cadena de caracteres a una variable String, Java crea un objeto String en el heap y la variable simplemente hace referencia a esa ubicaci\xf3n en memoria.")),(0,t.yg)("h3",{id:"while"},"While"),(0,t.yg)("p",null,"Bucle que ejecuta un bloque de codigo repetidamente mientras una condicion especificada sea verdadera. Se evalua antes de cada iteraci\xf3n."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-java"},"while (condici\xf3n) {\n    // C\xf3digo a ejecutar mientras la condici\xf3n sea verdadera\n}\n")),(0,t.yg)("p",null,"Despu\xe9s de cada iteraci\xf3n, la condici\xf3n se vuelve a evaluar. Si la condici\xf3n es falsa, la ejecuci\xf3n del bucle while se detiene y el control pasa a la siguiente instrucci\xf3n despu\xe9s del bucle."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-java"},"public class EjemploWhile {\n    public static void main(String[] args) {\n        int i = 1;\n        while (i <= 5) {\n            System.out.println(i);\n            i++;\n        }\n    }\n}\n\n")),(0,t.yg)("h3",{id:"do-while"},"Do while"),(0,t.yg)("p",null,"Se ejecuta su bloque de codigo al menos una vez. La condici\xf3n de la estructura est\xe1 abajo del bloque a repetir, a diferencia del while que est\xe1 en la parte superior."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-java"},'import java.util.Scanner;\n\npublic class Clase2 {\n    public static void main(String[] ar) {\n        Scanner teclado = new Scanner(System.in);\n        int suma, cant, valor, promedio;\n        suma = 0;\n        cant = 0;\n        do {\n            System.out.print("Ingrese un valor (0 para finalizar):");\n            valor = teclado.nextInt();\n            if (valor != 0) {\n                suma = suma + valor;\n                cant++;\n            }\n        } while (valor != 0);\n        if (cant != 0) {\n            promedio = suma / cant;\n            System.out.print("El promedio de los valores ingresados es:");\n            System.out.print(promedio);\n        } else {\n            System.out.print("No se ingresaron valores.");\n        }\n    }\n}\n')),(0,t.yg)("h3",{id:"for"},"For"),(0,t.yg)("p",null,"En general, la estructura for se usa en aquellas situaciones en las cuales CONOCEMOS la cantidad de veces que queremos que se ejecute el bloque de instrucciones. "),(0,t.yg)("p",null,(0,t.yg)("img",{alt:"for",src:n(6230).A,width:"625",height:"246"})),(0,t.yg)("p",null,'En su forma m\xe1s t\xedpica y b\xe1sica, esta estructura requiere una variable entera que cumple la funci\xf3n de un CONTADOR de vueltas. En la secci\xf3n indicada como "inicializaci\xf3n contador", se suele colocar el nombre de la variable que har\xe1 de contador, asign\xe1ndole a dicha variable un valor inicial. En la secci\xf3n de "condici\xf3n" se coloca la condici\xf3n que deber\xe1 ser verdadera para que el ciclo contin\xfae (en caso de un falso, el ciclo se detendr\xe1). Y finalmente, en la secci\xf3n de "incremento contador" se coloca una instrucci\xf3n que permite modificar el valor de la variable que hace de contador (para permitir que alguna vez la condici\xf3n sea falsa)'),(0,t.yg)("p",null,"Ejemplo: imprime en pantalla los n\xfameros del 1 al 100. "),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-java"},'public class Clase1 {\n    public static void main(String[] ar) {\n        for (int f = 1; f <= 100; f++) {\n            System.out.print(f);\n            System.out.print("-");\n        }\n    }\n}\n')))}p.isMDXComponent=!0},6230:(e,a,n)=>{n.d(a,{A:()=>r});const r=n.p+"assets/images/image-0c82488fcd75622109c725ae8cbc3dee.png"}}]);